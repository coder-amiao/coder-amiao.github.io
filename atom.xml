<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>三时</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-04-18T07:35:01.464Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>程序员三时</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>集合遍历与循环多种方式</title>
    <link href="http://example.com/2023/04/18/%E9%9B%86%E5%90%88%E9%81%8D%E5%8E%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E5%A4%9A%E7%A7%8D%E6%96%B9%E5%BC%8Fclglz0rh200005l6o07vdf9qf.html"/>
    <id>http://example.com/2023/04/18/集合遍历与循环多种方式clglz0rh200005l6o07vdf9qf.html</id>
    <published>2023-04-17T17:39:52.000Z</published>
    <updated>2023-04-18T07:35:01.464Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><code>Java</code>中集合是非常常用非常重要的 ，应用是十分广泛的，作为集合这种数据结构，遍历循环方式也有很多种我们可以梳理总结不同的遍历方式，方便理解和运用</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9de64203dd634961b07b24cb839c32c9~tplv-k3u1fbpfcp-zoom-1.image"></p><h1 id="List-遍历方式"><a href="#List-遍历方式" class="headerlink" title="List 遍历方式"></a>List 遍历方式</h1><ol><li><p>List继承了Collection，是有序的列表。</p></li><li><p>实现类有ArrayList、LinkedList、Vector、Stack等</p><ol><li><p>ArrayList是基于数组实现的，是一个数组队列。可以动态的增加容量！</p></li><li><p>LinkedList是基于链表实现的，是一个双向循环列表。可以被当做堆栈使用！</p></li><li><p>Vector是基于数组实现的，是一个矢量队列，是线程安全的！</p></li><li><p>Stack是基于数组实现的，是栈，它继承与Vector，特性是FILO（先进后出）！</p></li></ol></li></ol><p>所有list集合都是迭代器<code>Iterator</code>子类也都统称迭代器，可以通过迭代器方式去循环便利</p><ol><li>第一种方式 迭代器遍历<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">List a= <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">       a.add(<span class="number">1</span>);</span><br><span class="line">       a.add(<span class="number">2</span>);</span><br><span class="line">       a.add(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//获取迭代器</span></span><br><span class="line">       Iterator b=a.iterator();</span><br><span class="line">       <span class="comment">//判断是否有下一个值</span></span><br><span class="line">       <span class="keyword">while</span> (b.hasNext())&#123;</span><br><span class="line">           <span class="comment">//取出这个值</span></span><br><span class="line">           System.out.println(b.next());</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li>第二种方式</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List a= <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        a.add(<span class="number">1</span>);</span><br><span class="line">        a.add(<span class="number">2</span>);</span><br><span class="line">        a.add(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span>(Iterator iterator=a.iterator();iterator.hasNext();)&#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>第三种方式 foreach 遍历</li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List a= <span class="built_in">new</span> ArrayList();</span><br><span class="line">       a.<span class="keyword">add</span>(<span class="number">1</span>);</span><br><span class="line">       a.<span class="keyword">add</span>(<span class="number">2</span>);</span><br><span class="line">       a.<span class="keyword">add</span>(<span class="number">3</span>);</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">Object</span> o:a)&#123;</span><br><span class="line">           <span class="keyword">System</span>.<span class="keyword">out</span>.println(o);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>第四种方式 fori 遍历</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List a= <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        a.add(<span class="number">1</span>);</span><br><span class="line">        a.add(<span class="number">2</span>);</span><br><span class="line">        a.add(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.size();i++)&#123;</span><br><span class="line">            System.out.println(a.get(i));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="Map遍历方式"><a href="#Map遍历方式" class="headerlink" title="Map遍历方式"></a>Map遍历方式</h1><ol><li>按照key方式来遍历</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Map a=<span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">      a.put(<span class="string">&quot;a&quot;</span>,<span class="number">1</span>);</span><br><span class="line">      a.put(<span class="string">&quot;b&quot;</span>,<span class="number">2</span>);</span><br><span class="line">      a.put(<span class="string">&quot;c&quot;</span>,<span class="number">3</span>);</span><br><span class="line">      <span class="comment">//获取所以key</span></span><br><span class="line">      Set key=a.keySet();</span><br><span class="line">      <span class="keyword">for</span>(Object o:key)&#123;</span><br><span class="line">          <span class="comment">//通过key 来获取所有值</span></span><br><span class="line">          System.out.println(a.get(o));</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>通过Map.entrySet使用iterator遍历key和value</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Map a=<span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">      a.put(<span class="string">&quot;a&quot;</span>,<span class="number">1</span>);</span><br><span class="line">      a.put(<span class="string">&quot;b&quot;</span>,<span class="number">2</span>);</span><br><span class="line">      a.put(<span class="string">&quot;c&quot;</span>,<span class="number">3</span>);</span><br><span class="line">      <span class="comment">// 获取Iterator</span></span><br><span class="line">      Iterator&lt;Map.Entry&lt;String, Integer&gt;&gt; it = a.entrySet().iterator();</span><br><span class="line">      <span class="comment">//遍历</span></span><br><span class="line">       <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">           Map.Entry&lt;String, Integer&gt; entry = it.next();</span><br><span class="line">           System.out.println(<span class="string">&quot;key= &quot;</span> + entry.getKey() + <span class="string">&quot; and value= &quot;</span> + entry.getValue());</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>通过Map.entrySet遍历key和value，推荐，尤其是容量大时</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Map a=<span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">       a.put(<span class="string">&quot;a&quot;</span>,<span class="number">1</span>);</span><br><span class="line">       a.put(<span class="string">&quot;b&quot;</span>,<span class="number">2</span>);</span><br><span class="line">       a.put(<span class="string">&quot;c&quot;</span>,<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">for</span> ( Object o : a.entrySet()) &#123;</span><br><span class="line">            <span class="comment">//Map.entry&lt;Integer,String&gt; 映射项（键-值对）  有几个方法：用上面的名字entry</span></span><br><span class="line">            <span class="comment">//entry.getKey() ;entry.getValue(); entry.setValue();</span></span><br><span class="line">            <span class="comment">//map.entrySet()  返回此映射中包含的映射关系的 Set视图。</span></span><br><span class="line">            Map.Entry&lt;String,Integer&gt; d=(Map.Entry&lt;String,Integer&gt; )o;</span><br><span class="line">            System.out.println(<span class="string">&quot;key= &quot;</span> + d.getKey() + <span class="string">&quot; and value= &quot;</span> + d.getValue());</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>通过Map.values()遍历所有的value，但不能遍历key</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Map</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">       a.put(<span class="string">&quot;a&quot;</span>, <span class="number">1</span>);</span><br><span class="line">       a.put(<span class="string">&quot;b&quot;</span>, <span class="number">2</span>);</span><br><span class="line">       a.put(<span class="string">&quot;c&quot;</span>, <span class="number">3</span>);</span><br><span class="line">       <span class="keyword">for</span> (Object o : a.values()) &#123;</span><br><span class="line">           System.out.println(o);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h1 id="Stream流API遍历"><a href="#Stream流API遍历" class="headerlink" title="Stream流API遍历"></a>Stream流API遍历</h1><p> stream集合遍历forEach</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; a=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">a.add(<span class="string">&quot;judy&quot;</span>);</span><br><span class="line">a.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line"><span class="comment">//lambda表达式</span></span><br><span class="line">a.stream().forEach(s -&gt; System.out.println(s));</span><br><span class="line"></span><br><span class="line">a.stream().forEach(s -&gt; &#123;</span><br><span class="line">    System.out.println(s);</span><br><span class="line">    System.out.println(<span class="number">2</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Java&lt;/code&gt;中集合是非常常用非常重要的 ，应用是十分广泛的，作为集合这种数据结构，遍历循环方式也有很多种我们可以梳理总
      
    
    </summary>
    
      <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/Java/"/>
    
    
      <category term="List" scheme="http://example.com/tags/List/"/>
    
      <category term="Map" scheme="http://example.com/tags/Map/"/>
    
  </entry>
  
</feed>
